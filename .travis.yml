# see http://about.travis-ci.org/docs/user/languages/php/ for more hints
language: php

# lllist any PHP version you want to test against
php:
  # using major version aliases

  # aliased to 5.2.17
  - 5.2
  # aliased to 5.3.29
  - 5.3
  # aliased to a recent 5.4.x version
  - 5.4
  # aliased to a recent 5.5.x version
  - 5.5
  # aliased to a recent 5.6.x version
  - 5.6
  # aliased to a recent 7.x version
  #- 7.0
  # aliased to a recent hhvm version
  #- hhvm

# optionally specify a list of environments, for example to test different RDBMS
env:
  - DB=mysql
  #- DB=pgsql

# optionally set up exclutions and allowed failures in the matrix
matrix:
  exclude:
    - php: hhvm
      env: DB=pgsql  # PDO driver for pgsql is unsupported by HHVM (3rd party install for support)
  #allow_failures:
  #  - php: 7.0
  #  - php: hhvm

# execute any number of scripts before the test run, custom env's are available as variables
before_script:
 # - if [[ "$DB" == "pgsql" ]]; then psql -c "DROP DATABASE IF EXISTS hello_world_test;" -U postgres; fi
 # - if [[ "$DB" == "pgsql" ]]; then psql -c "create database hello_world_test;" -U postgres; fi
  - if [[ "$DB" == "mysql" ]]; then mysql -e "create database IF NOT EXISTS hello_world_test;" -uroot; fi

# omitting "script:" will default to phpunit
# use the $DB env variable to determine the phpunit.xml to use
script: phpunit --configuration phpunit_$DB.xml --coverage-text

# configure notifications (email, IRC, campfire etc)
notifications:
#  irc: "irc.freenode.org#yourfavouriteroomfortravis"



#Projects Using Gradle #
#If your project has build.gradle file in the repository root, Travis CI builds your project with Gradle:


#Projects Using Maven #
#If your project has pom.xml file in the repository root but no build.gradle, Travis CI builds your project with Maven 3:


# Projects Using Ant #
# Default script Command #
# If Travis CI does not detect Maven or Gradle files it runs Ant:
# ant test


#Because there is no single standard way of 
#installing project dependencies with Ant, you need to specify the exact command to
# run using install: key in your .travis.yml, for example:
# language: java
# install: ant deps


# Caching #

#A peculiarity of dependency caching in Gradle means that to
# avoid uploading the cache after every build you need to add the following lines to your 

# before_cache:
#   - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
#   - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
# cache:
#   directories:
#     - $HOME/.gradle/caches/
#     - $HOME/.gradle/wrapper/

